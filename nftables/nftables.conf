#!/usr/sbin/nft -f

table ip6 filter {
    chain input {
        type filter hook input priority 0; policy drop;
        
        # Разрешаем loopback
        iif lo accept
        
        # Разрешаем established соединения
        ct state established,related accept
    }
    chain forward {
        type filter hook forward priority 0; policy drop;
    }
    chain output {
        type filter hook output priority 0; policy accept;
    }
}

table ip filter {

    define TCP_PORTS = { 2010, 8000-8001, 8899-8900, 11226 }
    define UDP_PORTS = { 8000-8020, 10000-10007, 11227-11229 }

    counter icmp_flood_counter {}
    counter tcp_flood_counter {}
    counter tcp_conn_counter {}
    counter udp_flood_counter {}
    
    # Создаем наборы для хранения IP-адресов нарушителей
        
    set icmp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 10s
    }
    
    set tcp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 60s
    }

    set udp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 10s
    }

    chain input {
        type filter hook input priority -1; policy drop;

        ct state established,related accept
        iif lo accept # разрешает весь трафик, проходящий через локальный интерфейс
        # Правила фаервола
        tcp dport $TCP_PORTS accept # Разрешаем входящие TCP соединения
        udp dport $UDP_PORTS accept # Разрешаем входящие UDP соединения
    }

    chain ddos_protection  {
        type filter hook input priority 0;
        
        # ICMP flood защита
        icmp type echo-request \
            update @icmp_track { ip saddr limit rate over 30/second burst 30 packets } \
            counter name "icmp_flood_counter" \
            log prefix "[NFT] ICMP-DDOS: " flags all \
            drop

        # TCP flood защита
        tcp flags & (fin|syn|rst|ack) == syn \
            tcp dport $TCP_PORTS \
            update @tcp_track { ip saddr limit rate over 100/second burst 100 packets } \
            counter name "tcp_flood_counter" \
            log prefix "[NFT] TCP-DDOS: " flags all \
            drop

        # UDP flood защита 
        ip protocol udp \
            udp dport $UDP_PORTS \
            update @udp_track { ip saddr limit rate over 100000/second burst 20000 packets } \
            counter name "udp_flood_counter" \
            log prefix "[NFT] UDP-DDOS: " flags all \
            drop
    }
}

table ip scanner {
    counter portscan_counter {}
    set portscan {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 60s
    }
    
    chain prerouting {
        type filter hook prerouting priority -300;
        ip protocol tcp ct state new \
            update @portscan { ip saddr limit rate over 50/minute } \
            counter name "portscan_counter" \
            log prefix "[NFT] PORT-SCAN: " flags all \
            drop
    }
}
