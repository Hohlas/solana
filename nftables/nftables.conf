#!/usr/sbin/nft -f

table ip filter {

    chain input {
        type filter hook input priority 0; policy drop;

        ct state established,related accept
        iif lo accept

        # Разрешаем входящие TCP соединения
        tcp dport {2010, 8000, 8001, 8899, 8900, 11226} accept

        # Разрешаем входящие UDP соединения
        udp dport {8000-8020, 10000-10007, 11227-11229} accept
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }
}

table ip dos_protection {
    counter syn_flood_counter {}
    counter icmp_flood_counter {}
    counter tcp_flood_counter {}
    counter tcp_conn_counter {}
    counter udp_flood_counter {}
    
    # Создаем наборы для хранения IP-адресов нарушителей
    set syn_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 30s
    }
    
    set icmp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 10s
    }
    
    set tcp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 60s
    }

    set tcp_count_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 60s
    }

    set udp_track {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 10s
    }

    chain input {
        type filter hook input priority 0;

        # SYN flood защита
        tcp flags & (fin|syn|rst|ack) == syn \
            update @syn_track { ip saddr limit rate over 10/second burst 100 packets } \
            counter name "syn_flood_counter" \
            log prefix "[NFT] SYN-FLOOD: " flags all \
            drop

        # ICMP flood защита
        icmp type echo-request \
            update @icmp_track { ip saddr limit rate over 30/second burst 30 packets } \
            counter name "icmp_flood_counter" \
            log prefix "[NFT] ICMP-FLOOD: " flags all \
            drop

        # TCP flood защита
        tcp flags & (fin|syn|rst|ack) == syn \
            update @tcp_track { ip saddr limit rate over 50/minute burst 20 packets } \
            counter name "tcp_flood_counter" \
            log prefix "[NFT] TCP-FLOOD: " flags all \
            drop

        # UDP flood защита
        ip protocol udp \
            update @udp_track { ip saddr limit rate over 100000/second burst 20000 packets } \
            counter name "udp_flood_counter" \
            log prefix "[NFT] UDP-FLOOD: " flags all \
            drop
    }
}

table ip scanner {
    counter portscan_counter {}
    set portscan {
        type ipv4_addr
        size 65535
        flags dynamic
        timeout 60s
    }
    
    chain prerouting {
        type filter hook prerouting priority -300;
        ip protocol tcp ct state new \
            update @portscan { ip saddr limit rate over 50/minute } \
            counter name "portscan_counter" \
            log prefix "[NFT] PORT-SCAN: " flags all \
            drop
    }
}
